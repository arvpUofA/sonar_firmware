/*
 * UAVCAN data structure definition for libcanard.
 *
 * Autogenerated, do not edit.
 *
 * Source file: /home/isthatme/Documents/Clubs/ARVP/sonar_firmware/dsdl/uavcan/tunnel/Protocol.uavcan
 */

#ifndef __UAVCAN_TUNNEL_PROTOCOL
#define __UAVCAN_TUNNEL_PROTOCOL

#include <stdint.h>
#include "canard.h"

#ifdef __cplusplus
extern "C"
{
#endif

/******************************* Source text **********************************
#
# This enumeration specifies the encapsulated protocol.
# New protocols are likely to be added in the future.
#

uint8 MAVLINK                   = 0     # MAVLink

uint8 protocol
******************************************************************************/

/********************* DSDL signature source definition ***********************
uavcan.tunnel.Protocol
saturated uint8 protocol
******************************************************************************/

#define UAVCAN_TUNNEL_PROTOCOL_NAME                        "uavcan.tunnel.Protocol"
#define UAVCAN_TUNNEL_PROTOCOL_SIGNATURE                   (0xA367483C9B920E49ULL)

#define UAVCAN_TUNNEL_PROTOCOL_MAX_SIZE                    ((8 + 7)/8)

// Constants
#define UAVCAN_TUNNEL_PROTOCOL_MAVLINK                                        0 // 0

typedef struct
{
    // FieldTypes
    uint8_t    protocol;                      // bit len 8

} uavcan_tunnel_Protocol;

extern
uint32_t uavcan_tunnel_Protocol_encode(uavcan_tunnel_Protocol* source, void* msg_buf);

extern
int32_t uavcan_tunnel_Protocol_decode(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_tunnel_Protocol* dest, uint8_t** dyn_arr_buf);

extern
uint32_t uavcan_tunnel_Protocol_encode_internal(uavcan_tunnel_Protocol* source, void* msg_buf, uint32_t offset, uint8_t root_item);

extern
int32_t uavcan_tunnel_Protocol_decode_internal(const CanardRxTransfer* transfer, uint16_t payload_len, uavcan_tunnel_Protocol* dest, uint8_t** dyn_arr_buf, int32_t offset);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // __UAVCAN_TUNNEL_PROTOCOL